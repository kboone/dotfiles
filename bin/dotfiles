#!/usr/bin/env bash

# Basics: install & keep track of what was installed
# TODO: uninstall, reinstall, add file
# TODO: basically everything

BASE=$HOME/.dotfiles




function link {
    echo "Installing"
    cd $BASE/packages
    cd home
    for FILE in `ls -a | grep "^\.[^.]"`; do
        printf '%-20s' $FILE
        TARGET=$BASE/packages/home/$FILE
        if [[ ! -e ~/$FILE ]]; then
            # File doesn't exist, our job is easy!
            echo "Creating symlink."
            ln -s $TARGET ~/$FILE
        else
            # File exists, deal with it
            if [[ "$(readlink ~/$FILE)" = "$TARGET" ]]; then
                echo "Symlink already exists, ok."
            else
                while true; do
                    echo "File exists!"
                    echo "Options are:"
                    echo "r - Replace"
                    echo "s - Skip"
                    echo "n - New filename"
                    echo "b - Backup and replace"
                    read -p ">" OPTION
                    case $OPTION in
                        [Rr] )
                            echo "Replacing file ~/$FILE"
                            rm -r ~/$FILE
                            ln -s $TARGET ~/$FILE
                            break;;
                        [Bb] )
                            echo "Backing up ~/$FILE to ~/${FILE}.bak and replacing"
                            mv ~/$FILE ~/${FILE}.bak
                            ln -s $TARGET ~/$FILE
                            break;;
                        [Nn] )
                            while true; do
                                read -p "Enter new filename (full path): " NEW_FILENAME
                                # expand out tildes and the like
                                eval NEW_FILENAME=$NEW_FILENAME
                                if [[ ! -e $NEW_FILENAME ]]; then
                                    ln -s $TARGET $NEW_FILENAME
                                    break;
                                else
                                    echo "File exists, try again"
                                fi
                            done
                            break;;
                        [Ss] )
                            echo "Skipping file ~/$FILE"
                            break;;
                        * )
                            echo "Unknown option, try again"
                            ;;
                    esac
                done
            fi
        fi
    done

    printf '%-20s' '.ssh'
    if [[ ! -d ~/.ssh ]]; then
        echo "Creating .ssh directory and setting 700 permissions"
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
    else
        echo "Already exists, ok"
    fi

    printf '%-20s' '.ssh/config'
    FILE=~/.ssh/config
    TARGET=$BASE/packages/ssh/config
    if [[ ! -e $FILE ]]; then
        # File doesn't exist, our job is easy!
        echo "Creating symlink."
        ln -s $TARGET $FILE
    else
        # File exists, deal with it
        if [[ "$(readlink $FILE)" = "$TARGET" ]]; then
            echo "Symlink already exists, ok."
        else
            echo "Different .ssh/config in use. Ignoring"
        fi
    fi

    printf '%-20s' 'matplotlibrc'
    FILE=~/.config/matplotlib/matplotlibrc
    TARGET=$BASE/packages/matplotlib/matplotlibrc
    if [[ ! -e $FILE ]]; then
        # File doesn't exist, our job is easy!
        echo "Creating symlink."
        ln -s $TARGET $FILE
    else
        # File exists, deal with it
        if [[ "$(readlink $FILE)" = "$TARGET" ]]; then
            echo "Symlink already exists, ok."
        else
            echo "Different matplotlibrc in use. Ignoring"
        fi
    fi

    printf '%-20s' 'ipython'
    FILEDIR=~/.ipython/profile_default/startup
    FILE=$FILEDIR/50-ipython_startup.ipy
    TARGET=$BASE/packages/ipython/ipython_startup.ipy
    if [[ ! -e $FILE ]]; then
        # File doesn't exist, our job is easy!
        echo "Creating symlink."
        mkdir -p $FILEDIR
        ln -s $TARGET $FILE
    else
        # File exists, deal with it
        if [[ "$(readlink $FILE)" = "$TARGET" ]]; then
            echo "Symlink already exists, ok."
        else
            echo "Different ipython_startup in use. Ignoring"
        fi
    fi
}

function update {
    if [ "$#" -eq 0 ]; then
        echo "Usage: dotfiles update [package]"
        exit
    fi

    $BASE/bin/update_$1.sh
}

function install {
    if [ "$#" -eq 0 ]; then
        echo "Usage: dotfiles update [package]"
        exit
    fi

    $BASE/bin/install_$1.sh
}

function help {
    echo "Usage: dotfiles [command...]"
    echo "Available commands:"
    echo " - help: display this message"
    echo " - link: link all packages and dotfiles"
    echo " - install [package]: install the given package"
    echo " - update [package]: update the given package"
}

if [ "$#" -eq 0 ]; then
    help
    exit
fi

case "$1" in
    link)
        link
        ;;

    install)
        install $2
        ;;

    update)
        update $2
        ;;

    help)
        help
        ;;

    *)
        help
        ;;
esac
